diff -urN Cura-15.02.1.org/Cura/gui/sceneView.py Cura-15.02.1/Cura/gui/sceneView.py
--- Cura-15.02.1.org/Cura/gui/sceneView.py	2015-02-18 21:22:48.000000000 +0100
+++ Cura-15.02.1/Cura/gui/sceneView.py	2015-05-14 22:34:56.020409418 +0200
@@ -1320,105 +1320,16 @@
 
 		size = [profile.getMachineSettingFloat('machine_width'), profile.getMachineSettingFloat('machine_depth'), profile.getMachineSettingFloat('machine_height')]
 
-		machine_type = profile.getMachineSetting('machine_type')
-		if machine_type not in self._platformMesh:
-			self._platformMesh[machine_type] = None
-
-			filename = None
-			texture_name = None
-			offset = [0,0,0]
-			texture_offset = [0,0,0]
-			texture_scale = 1.0
-			if machine_type == 'ultimaker2' or machine_type == 'ultimaker2extended':
-				filename = resources.getPathForMesh('ultimaker2_platform.stl')
-				offset = [-9,-37,145]
-				texture_name = 'Ultimaker2backplate.png'
-				texture_offset = [9,150,-5]
-			elif machine_type == 'ultimaker2go':
-				filename = resources.getPathForMesh('ultimaker2go_platform.stl')
-				offset = [0,-42,145]
-				texture_offset = [0,105,-5]
-				texture_name = 'Ultimaker2backplate.png'
-				texture_scale = 0.9
-			elif machine_type == 'ultimaker_plus':
-				filename = resources.getPathForMesh('ultimaker2_platform.stl')
-				offset = [0,-37,145]
-				texture_offset = [0,150,-5]
-				texture_name = 'UltimakerPlusbackplate.png'
-			elif machine_type == 'ultimaker':
-				filename = resources.getPathForMesh('ultimaker_platform.stl')
-				offset = [0,0,2.5]
-			elif machine_type == 'Witbox':
-				filename = resources.getPathForMesh('Witbox_platform.stl')
-				offset = [0,-37,145]
-
-			if filename is not None:
-				meshes = meshLoader.loadMeshes(filename)
-				if len(meshes) > 0:
-					self._platformMesh[machine_type] = meshes[0]
-					self._platformMesh[machine_type]._drawOffset = numpy.array(offset, numpy.float32)
-					self._platformMesh[machine_type].texture = None
-					if texture_name is not None:
-						self._platformMesh[machine_type].texture = openglHelpers.loadGLTexture(texture_name)
-						self._platformMesh[machine_type].texture_offset = texture_offset
-						self._platformMesh[machine_type].texture_scale = texture_scale
-		if self._platformMesh[machine_type] is not None:
-			mesh = self._platformMesh[machine_type]
-			glColor4f(1,1,1,0.5)
-			self._objectShader.bind()
-			self._renderObject(mesh, False, False)
-			self._objectShader.unbind()
-
-			#For the Ultimaker 2 render the texture on the back plate to show the Ultimaker2 text.
-			if mesh.texture is not None:
-				glBindTexture(GL_TEXTURE_2D, mesh.texture)
-				glEnable(GL_TEXTURE_2D)
-				glPushMatrix()
-				glColor4f(1,1,1,1)
-
-				glTranslate(mesh.texture_offset[0], mesh.texture_offset[1], mesh.texture_offset[2])
-				glScalef(mesh.texture_scale, mesh.texture_scale, mesh.texture_scale)
-				h = 50
-				d = 8
-				w = 100
-				glEnable(GL_BLEND)
-				glBlendFunc(GL_DST_COLOR, GL_ONE_MINUS_SRC_ALPHA)
-				glEnable(GL_ALPHA_TEST)
-				glAlphaFunc(GL_GREATER, 0.0)
-				glBegin(GL_QUADS)
-				glTexCoord2f(1, 0)
-				glVertex3f( w, 0, h)
-				glTexCoord2f(0, 0)
-				glVertex3f(-w, 0, h)
-				glTexCoord2f(0, 1)
-				glVertex3f(-w, 0, 0)
-				glTexCoord2f(1, 1)
-				glVertex3f( w, 0, 0)
-
-				glTexCoord2f(1, 0)
-				glVertex3f(-w, d, h)
-				glTexCoord2f(0, 0)
-				glVertex3f( w, d, h)
-				glTexCoord2f(0, 1)
-				glVertex3f( w, d, 0)
-				glTexCoord2f(1, 1)
-				glVertex3f(-w, d, 0)
-				glEnd()
-				glDisable(GL_TEXTURE_2D)
-				glDisable(GL_ALPHA_TEST)
-				glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
-				glPopMatrix()
-		else:
-			glColor4f(0,0,0,1)
-			glLineWidth(3)
-			glBegin(GL_LINES)
-			glVertex3f(-size[0] / 2, -size[1] / 2, 0)
-			glVertex3f(-size[0] / 2, -size[1] / 2, 10)
-			glVertex3f(-size[0] / 2, -size[1] / 2, 0)
-			glVertex3f(-size[0] / 2+10, -size[1] / 2, 0)
-			glVertex3f(-size[0] / 2, -size[1] / 2, 0)
-			glVertex3f(-size[0] / 2, -size[1] / 2+10, 0)
-			glEnd()
+		glColor4f(0,0,0,1)
+		glLineWidth(3)
+		glBegin(GL_LINES)
+		glVertex3f(-size[0] / 2, -size[1] / 2, 0)
+		glVertex3f(-size[0] / 2, -size[1] / 2, 10)
+		glVertex3f(-size[0] / 2, -size[1] / 2, 0)
+		glVertex3f(-size[0] / 2+10, -size[1] / 2, 0)
+		glVertex3f(-size[0] / 2, -size[1] / 2, 0)
+		glVertex3f(-size[0] / 2, -size[1] / 2+10, 0)
+		glEnd()
 
 		glDepthMask(False)
 
